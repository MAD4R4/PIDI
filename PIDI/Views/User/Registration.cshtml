@model PIDI.Models.UserModel

@{
    ViewBag.Title = "Registration";
}
<div class="container">
    <h2>Informe os dados para cadastro</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">

            <div class="col-lg-12">

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.ConfirmEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required", @type = "email" } })
                            @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.dtNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.dtNascimento, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.dtNascimento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.cpf, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cpf, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Masculino",
                                Value = "M",
                                Selected = true

                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Feminino",
                                Value = "F",
                            });
                        }
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.sexo, listItems, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.sexo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.senha, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.senha, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.senha, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group text-monospace h4 font-weight-bold">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control form-control-lg", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Finalizar cadastro" class="btn btn-info btn-lg" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/scripts/CustomValidation.js")

    <script>
        $(document).ready(function () {
            $("#cpf").inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
        });
    </script>

    @if (null != TempData["alertMessage"])
    {
        <script type="text/javascript">
           alert('@TempData["alertMessage"]');
        </script>
    }




}
