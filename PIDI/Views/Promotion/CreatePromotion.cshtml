@model PIDI.Models.Admin.PromotionModel

@{
    ViewBag.Title = "CreatePromotion";
    var produtos = PIDI.Controllers.Admin.ProductController.Instance.GetProducts(10);
}
<div class="container">
    <h2>Cadastrar promoção</h2>

    <link type="text/css" rel="stylesheet" href="~/Scripts/pytesNET-tail.select-d6454ba/css/bootstrap4/tail.select-default.min.css" />
    <script type="text/javascript" src="~/Scripts/pytesNET-tail.select-d6454ba/js/tail.select.min.js"></script>



    @using (Html.BeginForm("CreatePromotion", "Promotion", FormMethod.Post, new { onsubmit = "return validate()", id = "promotionForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.PromotionName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PromotionName, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.PromotionName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.discountAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.discountAmount, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.discountAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.InitDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InitDate, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.InitDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group text-monospace h4 font-weight-bold">
                <label class="control-label col-md-2" for="Produtos">Produtos</label>
                <div class="col-md-10">
                    <select class="select-move" multiple>
                        <optgroup label="Produtos">

                            @{
                                foreach (var item in produtos)
                                {
                                    <option value=@item.Id>@item.ProductName</option>
                                }
                            }
                        </optgroup>
                    </select>

                    <div class="tail-move-container"></div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" onclick="return validate()" value="Cadastrar   " class="btn btn-info btn-lg" />&nbsp &nbsp
                    @Html.ActionLink("Retornar", "Index", null, new { @class = "btn btn-info btn-lg"})
                </div>
            </div>
        </div>
    }
</div>
<!-- Adicionando JQuery -->
<script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
        crossorigin="anonymous"></script>

<script type="text/javascript">

    validate = function () {
        var SelectField = tail.select(".select-move");
        var files = SelectField.options.selected;

        var myform = document.getElementById('promotionForm');
        var data = new FormData(myform);
        var array = [];

        for (var x = 0; x < files.length; x++) {
            array[x] = files[x].value;
        }
        data.append('productsString', array);
        $.ajax({
            type: "POST",
            url: '/Promotion/CreatePromotion',
            contentType: false,
            processData: false,
            data: data,
            success: function (result) {
                console.log("FOOOOOOOOOOOI");
                window.location = '/Promotion/Index'
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                if (xhr.responseText && xhr.responseText[0] == "{")
                    err = JSON.parse(xhr.responseText).Message;
                console.log(err);
            }
        });

        return false;
    }


    tail.select(".select-move", {
        search: true,
        descriptions: true,
        hideSelected: true,
        hideDisabled: true,
        locale: "pt_BR",
        multiShowCount: false,
        stayOpen: false,
        placeholder: "Selecione os produtos",
        multiContainer: ".tail-move-container"
    });
</script>

