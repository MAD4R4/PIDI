@model PIDI.Models.ProductModel
@using PIDI.Controllers.Admin;

@{
    ViewBag.Title = "Create";
}

<div class="container">

    <h2>Incluir produto</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
   
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                @{
                    var categories = CategoryController.Instance.GetCategories(100);
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    int i = 0;
                    foreach (var item in categories)
                    {
                        if (i == 0)
                        {
                            listItems.Add(new SelectListItem
                            {
                                Text = item.CategoryName,
                                Value = item.CategoryName,
                                Selected = true
                            });
                        }
                        else
                        {
                            listItems.Add(new SelectListItem
                            {
                                Text = item.CategoryName,
                                Value = item.CategoryName,
                            });
                        }
                        ++i;
                    }
                }
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Category, listItems, new { htmlAttributes = new { @class = "form-control form-control-lg", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group text-monospace h4 font-weight-bold">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control form-control-lg" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Retornar", "Index", null, new { @class = "btn btn-info btn-lg" })&nbsp &nbsp
                    <input type="submit" value="Incluir" class="btn btn-info btn-lg" />
                </div>
            </div>
        </div>
    }
</div>

